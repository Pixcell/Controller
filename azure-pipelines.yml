trigger:
  tags:
    include:
      - v.*
  branches:
    include:
      - develop
      - master
  paths:
    exclude:
      - README.md

pr:
  - master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  repository: 'focal-freedom-236620/controller'
  type: $(Build.SourceBranchName)
  commit: $(Build.SourceVersion)
  sem_tag:
  controller_tar:

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
      npm run build
    displayName: 'npm install and build'

  - script: |
      npm test
    displayName: 'unit tests'

  - script: |
      echo "npm test"
    displayName: 'integration tests'

  - script: |
      npm pack
      pwd
      ls
    displayName: 'npm pack'

  - bash: |
      echo checking pack file exists..
      tar=$(ls iofogcontroller-*.tgz)
      echo $tar
      echo "##vso[task.setvariable variable=controller_tar]$tar"
    displayName: 'controller_tar check'
    name: setcontrollertarvarStep

  - bash: |
      echo current tag..
      tag=$(type)
      tag=${tag:0:4}
      echo "##vso[task.setvariable variable=sem_tag]$tag"
    displayName: 'tag'
    name: setvarStep
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')

  - task: Docker@2
    displayName: 'build dev docker'
    inputs:
      containerRegistry: 'Edgeworx GCP'
      repository: $(repository)
      command: 'build'
      Dockerfile: 'Dockerfile.dev'
      arguments: --build-arg FILENAME=$(controller_tar)
      tags: |
        dev-$(commit)
        dev-$(type)
        dev-latest
        dev-$(sem_tag)

  - task: Docker@2
    displayName: 'push dev docker'
    inputs:
      containerRegistry: 'Edgeworx GCP'
      repository: $(repository)
      command: 'push'
      Dockerfile: 'Dockerfile.dev'
      tags: |
        dev-$(commit)
        dev-$(type)
        dev-latest
        dev-$(sem_tag)

  - task: Docker@2
    displayName: 'build rel docker'
    inputs:
      containerRegistry: 'Edgeworx GCP'
      repository: $(repository)
      command: 'build'
      Dockerfile: 'Dockerfile.rel'
      arguments: --build-arg FILENAME=$(controller_tar)
      tags: |
        rel-$(commit)
        rel-$(type)
        rel-latest
        rel-$(sem_tag)

  - task: Docker@2
    displayName: 'push rel docker'
    inputs:
      containerRegistry: 'Edgeworx GCP'
      repository: $(repository)
      command: 'push'
      Dockerfile: 'Dockerfile.rel'
      tags: |
        rel-$(commit)
        rel-$(type)
        rel-latest
        rel-$(sem_tag)

  - script: |
      echo "npm test"
    displayName: 'api tests'

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(System.DefaultWorkingDirectory)
      TargetFolder: $(Build.ArtifactStagingDirectory)
      Contents: |
        *.tgz
      OverWrite: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'controller'

#  - task: Npm@1
#    displayName: 'publish npm package'
#    inputs:
#      command: 'publish'
#      publishRegistry: 'useFeed'
#      publishFeed: 'edgeworx'
